package org.munna.resources;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.DefaultValue;
import javax.ws.rs.Encoded;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import org.munna.model.Message;
import org.munna.service.MessageService;

@Path("/messages")  

//to incoming url (/messages) to this class
public class MessageResource {
	MessageService messageService = new MessageService();
	
	//to map HTTP Request methods with the java methods 
	@GET  
	//to Specify the response content type /format
	@Produces(MediaType.APPLICATION_JSON) 
	public List<Message> getMessages( @QueryParam("year") int year,@QueryParam("start") int start
			,@QueryParam("pages") int pages)
	{
		if(year >0){
			return messageService.getMessagesByYear(year);
		}
		if(start >=0 && pages >= 0){
			return messageService.getMessagesByPagination(start, pages);
		}
		return messageService.getMessages();
	}
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	@Path("/{messageId}")
	@Encoded
	public Message getMessage(@PathParam("messageId") long id ,@QueryParam("year") String year)
	{
		System.out.println("message id " + id +" year "+year);
		return messageService.getMessage(id);
	}
	@POST
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes("application/json")
	public Message addMessage(Message message)
	{
		return messageService.addMessage(message);
	}
	@PUT
	@Path("/{messageId}")
	@Consumes("application/json")
	@Produces(MediaType.APPLICATION_JSON)
	public Message updateMessage(@PathParam("messageId") long id,Message message){
		message.setId(id);
		return messageService.updateMessage(message);
	}
	@DELETE
	@Path("/{messageId}")
	public void deleteMessage(@PathParam("messageId") long id){
		messageService.removeMessage(id);
	}
	
}
